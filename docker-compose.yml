version: '3.8'

services:
  # HODLXXI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hodlxxi-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      # Load from .env file
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-production}
      - RPC_USER=${RPC_USER}
      - RPC_PASSWORD=${RPC_PASSWORD}
      - RPC_HOST=${RPC_HOST:-bitcoin}
      - RPC_PORT=${RPC_PORT:-8332}
      - RPC_WALLET=${RPC_WALLET}
      - DATABASE_URL=${DATABASE_URL:-postgresql://hodlxxi:hodlxxi@postgres:5432/hodlxxi}
      - SOCKETIO_CORS=${SOCKETIO_CORS:-*}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - hodlxxi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hodlxxi-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-hodlxxi}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-hodlxxi}
      - POSTGRES_DB=${DB_NAME:-hodlxxi}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hodlxxi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hodlxxi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: hodlxxi-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-hodlxxi}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - hodlxxi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: hodlxxi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - hodlxxi-network
    profiles:
      - production

  # Bitcoin Core (optional, for local development)
  bitcoin:
    image: btcpayserver/bitcoin:25.0
    container_name: hodlxxi-bitcoin
    restart: unless-stopped
    ports:
      - "8332:8332"
      - "8333:8333"
    volumes:
      - bitcoin-data:/data
    environment:
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-testnet}
      - BITCOIN_EXTRA_ARGS=-rpcuser=${RPC_USER} -rpcpassword=${RPC_PASSWORD} -rpcallowip=0.0.0.0/0 -rpcbind=0.0.0.0
    networks:
      - hodlxxi-network
    profiles:
      - development
      - with-bitcoin

networks:
  hodlxxi-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  bitcoin-data:
    driver: local
